#!/bin/bash

# Функция проверки пра и исполнения
exec_sh()
{
	declare -i timework

	timeout=$1
	shift

	file=$1
	shift
	echo $file >> /ubconfig/log 
	name=$(echo $file | awk -F "/" '{print $NF}' )

	owner=$(ls -l $file | cut -d' ' -f3)
	su $owner -c "$file $(echo $@)" 1>/ubconfig/$name.wf 2>/ubconfig/${name}_error.wf &

	pid=$!

	timeout_run $timeout &

}

# Функция контроля времени исполнения
timeout_run()
{
	timework=1
	timeout=$1

	while [ $timeout -gt $timework -a "$(ps $pid | grep : )" != "" ]
	do
		timework=$(ps -p $pid -o etimes= | sed 's/ //g')

		if [ $timeout -eq $timework ]; then
			kill $pid
			echo "Prosses stopped !!" >> /ubconfig/$name.wf
		fi
	done

	mv /ubconfig/${name}_error.wf /ubconfig/${name}_error.txt
	chmod 777 /ubconfig/{$name}_error.txt
	
	mv /ubconfig/$name.wf /ubconfig/$name.txt
	chmod 777 /ubconfig/$name.txt
}

cd /

if [ "$1" == "start" ]; then
	mkdir ubconfig
	touch ubconfig/turn_run
	chmod -R 777 ubconfig

	while : ;
	do
		inotifywait -e close_write ubconfig/turn_run
		(
			str=$(cat ubconfig/turn_run | head -n 1 )

			if [ "$str" != "" ]; then
				sed -i '1d' ubconfig/turn_run 
				exec_sh $str
			fi
		)

	done

else
	rm -f -r ubconfig 
fi